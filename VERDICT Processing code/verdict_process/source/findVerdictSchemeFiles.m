function [numFiles, fileNames] = findVerdictSchemeFiles(folderName)
% FINDVERDICTSCHEMEFILES Find files in a folder tree with names beginning "verdictscheme"
%   [numFiles, fileNames] = FINDVERDICTSCHEMEFILES(folderName) returns the number of files
%   found in the folder tree rooted at folderName that have file names beginning with
%   "verdictscheme". The function also returns a cell array of strings containing the full
%   file names, including paths, to these files.
%
%   Inputs:
%       folderName - the name of the folder to search in (string)
%
%   Outputs:
%       numFiles - the number of files found (integer)
%       fileNames - a cell array of strings containing the full file names of the found files
%
% Initially generated by MatGPT, edited by David Atkinson
%
% See Also checkVerdictSchemeTable 

% Initialize variables
numFiles = 0;
fileNames = {};

% Get a list of all files and folders in the specified folder
dirContents = dir(folderName);

% Loop over all items in the directory
for i = 1:length(dirContents)
    % Get the current item's name and full path
    itemName = dirContents(i).name;
    itemPath = fullfile(folderName, itemName);
    
    % Check if the current item is a file
    if dirContents(i).isdir == 0
        % Check if the file name starts with "verdictscheme"
        if startsWith(itemName, 'verdictscheme')
            % Increment the file count and add the file name to the list
            numFiles = numFiles + 1;
            fileNames{numFiles} = itemPath;
        end
    % If the current item is a directory, recursively call this function on it
    elseif ~strcmp(itemName, '.') && ~strcmp(itemName, '..')
        [subNumFiles, subFileNames] = findVerdictSchemeFiles(itemPath);
        numFiles = numFiles + subNumFiles;
        fileNames = [fileNames subFileNames];
    end
end
end